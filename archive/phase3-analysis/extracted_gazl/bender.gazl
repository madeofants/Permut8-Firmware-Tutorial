
PRAWN_FIRMWARE_PATCH_FORMAT: ! DEFi #2
FALSE: ! DEFi #0
TRUE: ! DEFi #1
panelTextRows: CNST *8
DATA &.s_BITSCL3482a8e &.s_SINSAM3482a8f &.s_ROTSRA3482a90
DATA &.s_DLYLEF3482a91 &.s_SHARPS3482a92 &.s_SHARPF3482a93
DATA &.s_SMOOTH3482a94 &.s_SMOOTH3482a95
GLOB *1
clock: DATi #0
params: GLOB *PARAM_COUNT
displayLEDs: GLOB *4
CNST *1
clockFreqLimit: DATi #132300
signal: GLOB *2
CNST *1
! SHLi <A> #1 #OPERATOR_1_PARAM_INDEX
! SHLi <B> #1 #OPERAND_1_HIGH_PARAM_INDEX
! IORi <A> <A> <B>
! SHLi <B> #1 #OPERAND_1_LOW_PARAM_INDEX
! IORi <A> <A> <B>
! SHLi <B> #1 #OPERATOR_2_PARAM_INDEX
! IORi <A> <A> <B>
! SHLi <B> #1 #OPERAND_2_HIGH_PARAM_INDEX
! IORi <A> <A> <B>
! SHLi <B> #1 #OPERAND_2_LOW_PARAM_INDEX
! IORi <A> <A> <B>
updateMask: DATi <A>
EIGHT_BIT_EXP_TABLE: CNST *256
DATA #0x0 #0x1 #0x2 #0x3 #0x4 #0x5 #0x6 #0x7 #0x8 #0x9
DATA #0xa #0xb #0xc #0xd #0xe #0xf #0x10 #0x11 #0x12 #0x13
DATA #0x14 #0x15 #0x16 #0x17 #0x18 #0x19 #0x1a #0x1b #0x1c
DATA #0x1d #0x1e #0x1f #0x20 #0x21 #0x22 #0x23 #0x24 #0x25
DATA #0x26 #0x27 #0x28 #0x29 #0x2a #0x2b #0x2c #0x2d #0x2e
DATA #0x2f #0x30 #0x31 #0x32 #0x33 #0x34 #0x35 #0x36 #0x37
DATA #0x38 #0x39 #0x3a #0x3b #0x3c #0x3d #0x3e #0x3f #0x40
DATA #0x42 #0x44 #0x46 #0x48 #0x4a #0x4c #0x4e #0x50 #0x52
DATA #0x54 #0x56 #0x58 #0x5a #0x5c #0x5e #0x60 #0x62 #0x64
DATA #0x66 #0x68 #0x6a #0x6c #0x6e #0x70 #0x72 #0x74 #0x76
DATA #0x78 #0x7a #0x7c #0x7e #0x80 #0x84 #0x88 #0x8c #0x90
DATA #0x94 #0x98 #0x9c #0xa0 #0xa4 #0xa8 #0xac #0xb0 #0xb4
DATA #0xb8 #0xbc #0xc0 #0xc4 #0xc8 #0xcc #0xd0 #0xd4 #0xd8
DATA #0xdc #0xe0 #0xe4 #0xe8 #0xec #0xf0 #0xf4 #0xf8 #0xfc
DATA #0x100 #0x110 #0x120 #0x130 #0x140 #0x150 #0x160
DATA #0x170 #0x180 #0x190 #0x1a0 #0x1b0 #0x1c0 #0x1d0
DATA #0x1e0 #0x1f0 #0x200 #0x220 #0x240 #0x260 #0x280
DATA #0x2a0 #0x2c0 #0x2e0 #0x300 #0x320 #0x340 #0x360
DATA #0x380 #0x3a0 #0x3c0 #0x3e0 #0x400 #0x440 #0x480
DATA #0x4c0 #0x500 #0x540 #0x580 #0x5c0 #0x600 #0x640
DATA #0x680 #0x6c0 #0x700 #0x740 #0x780 #0x7c0 #0x800
DATA #0x880 #0x900 #0x980 #0xa00 #0xa80 #0xb00 #0xb80
DATA #0xc00 #0xc80 #0xd00 #0xd80 #0xe00 #0xe80 #0xf00
DATA #0xf80 #0x1000 #0x1100 #0x1200 #0x1300 #0x1400
DATA #0x1500 #0x1600 #0x1700 #0x1800 #0x1900 #0x1a00
DATA #0x1b00 #0x1c00 #0x1d00 #0x1e00 #0x1f00 #0x2000
DATA #0x2200 #0x2400 #0x2600 #0x2800 #0x2a00 #0x2c00
DATA #0x2e00 #0x3000 #0x3200 #0x3400 #0x3600 #0x3800
DATA #0x3a00 #0x3c00 #0x3e00 #0x4000 #0x4400 #0x4800
DATA #0x4c00 #0x5000 #0x5400 #0x5800 #0x5c00 #0x6000
DATA #0x6400 #0x6800 #0x6c00 #0x7000 #0x7400 #0x7800
DATA #0x7c00 #0x8000 #0x8800 #0x9000 #0x9800 #0xa000
DATA #0xa800 #0xb000 #0xb800 #0xc000 #0xc800 #0xd000
DATA #0xd800 #0xe000 #0xe800 #0xf000 #0xffff
LOG2: ! DEFf #0.69314718055994530942
LOG2R: ! DEFf #1.44269504088896340736
LOG10R: ! DEFf #0.43429448190325182765
E: ! DEFf #2.71828182845904523536
HALF_PI: ! DEFf #1.57079632679489661923
PI: ! DEFf #3.14159265358979323846
! MULf <A> #PI #2.0
TWICE_PI: ! DEFf <A>
COS_EPSILON: ! DEFf #1.0e-6

error: FUNC
PARA *1
$s: INPp
MOVp %1 $s
CALL ^trace %0 *2
CALL ^abort %0 *1
RETU


trunc: FUNC
$y: OUTf
$x: INPf
GEQf $x #0.0 @.f0
SUBf %0 #0.0 $x
FLOf %0 %0 
SUBf $y #0.0 %0
GOTO @.e1 
.f0: FLOf $y $x
.e1: RETU


fmod: FUNC
$z: OUTf
$x: INPf
$y: INPf
NEQf $y #0.0 @.f0
MOVp %1 &.s_Divisi3482a96
CALL &error %0 *2
GOTO @.e1 
.f0: DIVf %1 $x $y
CALL &trunc %0 *2
MULf %0 %0 $y
SUBf $z $x %0
.e1: RETU


cos: FUNC
$y: OUTf
$x: INPf
$a: LOCf
$n: LOCf
$m: LOCf
$t: LOCf
MOVf %1 $x
MOVf %2 #TWICE_PI 
CALL &fmod %0 *3
MOVf $m %0 
SUBf %0 #0.0 $m
MULf $m %0 $m
MOVf $y #1.0
MOVf $n #1.0 
MOVf $a #1.0 
.l0: MOVf $t $y
MULf %0 $n $n
MULf %1 $a $m
ADDf %0 %0 $n
DIVf $a %1 %0
ADDf $y $y $a
ADDf $n $n #2.0
NEQf $y $t @.l0
ABSf %1 $y
GEQf %1 #COS_EPSILON @.f1
MOVf $y #0.0
.f1: RETU


sin: FUNC
$y: OUTf
$x: INPf
SUBf %1 $x #HALF_PI
CALL &cos %0 *2
MOVf $y %0 
RETU

CURVE_SIZE_BITS: ! DEFi #4
! SHLi <A> #1 #CURVE_SIZE_BITS
CURVE_SIZE: ! DEFi <A>
! ADDi <A> #CURVE_SIZE #1
CURVE_SIZE_PLUS_1: ! DEFi <A>
! SUBi <A> #12 #CURVE_SIZE_BITS
CURVE_SHIFT: ! DEFi <A>
! XORi <A> #0 #-1
! SHLi <A> <A> #CURVE_SHIFT
! XORi <A> <A> #-1
CURVE_FRACTION_MASK: ! DEFi <A>
! SHLi <A> #1 #CURVE_SHIFT
CURVE_STEP_SIZE: ! DEFi <A>
! iTOf <A> #CURVE_STEP_SIZE #1.0
! DIVf <A> #1.0 <A>
STEP_TO_FLOAT_SCALE: ! DEFf <A>
NO_SHAPER: ! DEFi #0
LINEAR_SHAPER: ! DEFi #1
QUADRATIC_SHAPER: ! DEFi #2
SHAPER_COUNT: ! DEFi #3
BIT_CRUSH: ! DEFi #1
SINE_SHAPE: ! DEFi #2
SPIN: ! DEFi #3
STEREO_DELAY: ! DEFi #4
OPERATOR_SHAPERS: CNST *5
DATA #NO_SHAPER #LINEAR_SHAPER #LINEAR_SHAPER
DATA #QUADRATIC_SHAPER #QUADRATIC_SHAPER
sinTable: GLOB *0x1000
linCurveA: GLOB *CURVE_SIZE
linCurveB: GLOB *CURVE_SIZE
quadCurveA: GLOB *CURVE_SIZE_PLUS_1
quadCurveB: GLOB *CURVE_SIZE_PLUS_1
quadCurveC: GLOB *CURVE_SIZE_PLUS_1
GLOB *1
op1: DATi #-1
GLOB *1
shaper: DATi #0
GLOB *1
op1Stuff: DATi #0
GLOB *1
spinXOrR: DATi #0
GLOB *1
biasL: DATi #0
GLOB *1
biasR: DATi #0
GLOB *1
delayL: DATi #0
GLOB *1
delayR: DATi #0
GLOB *1
lastOp1Param: DATi #-1
GLOB *1
lastOp2: DATi #-1
GLOB *1
lastShaperBits: DATi #-1

init: FUNC
PARA *1
$i: LOCi
$s: LOCi
MOVi $i #0
GEQi #0 #0x1000 @.e0
.l1: NOOP
! MULf <A> #2.0 #PI
! DIVf <A> <A> #4096.0
iTOf %1 $i <A>
CALL &sin %0 *2
! iTOf <A> #0x800 #1.0
MULf %0 <A> %0
ADDf %0 #0.5 %0
FLOf %0 %0 
fTOi $s %0 #1.0
GEQi $s #-0x7FF @.f2
MOVi $s #-0x7FF
GOTO @.e3 
.f2: LEQi $s #0x7FF @.f4
MOVi $s #0x7FF
.f4: NOOP
.e3: POKE &sinTable $i $s
FORi $i #0x1000 @.l1
.e0: RETU


update: FUNC
PARA *1
! ADDi <A> #CURVE_SIZE_PLUS_1 #3
$params: LOCA *PARAM_COUNT
$quadPoints: LOCA *<A>
$v: LOCi
$mask: LOCi
$d: LOCi
$i: LOCi
$shaperBits: LOCi
$shelf: LOCi
$op1: LOCi
$op2: LOCi
$op1Param: LOCi
$stereoBit: LOCi
$t: LOCi
$a: LOCf
$b: LOCf
$c: LOCf
ADRL %0 $params *0
COPY %0 &params *PARAM_COUNT
MOVi $op1 $params:OPERATOR_1_PARAM_INDEX
MOVi $op1Param $params:OPERAND_1_HIGH_PARAM_INDEX
PEEK %0 &op1
NEQi %0 $op1 @.t0
PEEK %0 &lastOp1Param 
EQUi %0 $op1Param @.f1
.t0: POKE &op1 $op1
POKE &lastOp1Param $op1Param
ANDi $stereoBit $op1Param #0x80
SWCH $op1 *5 @.s2
.s2#BIT_CRUSH: ANDi %0 $op1Param #0x7F
SHLi $t %0 #3
ANDi %0 $op1Param #0x1
EQUi %0 #0 @.f4
IORi $t $t #0x07
.f4: POKE &op1Stuff $t
! SUBi <A> #10 #3
! SUBi <A> <A> #1
! SHLi <A> #1 <A>
ADDi %0 $t <A>
! SUBi <A> #10 #3
! XORi <B> #0 #-1
SHRu %0 %0 <A>
SHLi %0 <B> %0
XORi %0 %0 #-1
POKE &displayLEDs:0 %0 
EQUi $stereoBit #0 @.f5
POKE &biasL $t
POKE &biasR #0
GOTO @.e3
.f5: SHRi $t $t #1
POKE &biasL $t
POKE &biasR $t
.e6: GOTO @.e3
.s2#SINE_SHAPE: ANDi %0 $op1Param #0x7F
ADDi $t %0 #1
POKE &op1Stuff $t
SHLi %0 $stereoBit #2
POKE &biasL %0 
! SUBi <B> #7 #3
! SUBi <B> <B> #1
! SHLi <B> #1 <B>
ADDi %0 $t <B>
! SUBi <B> #7 #3
! XORi <A> #0 #-1
SHRu %0 %0 <B>
SHLi %0 <A> %0
XORi %0 %0 #-1
POKE &displayLEDs:0 %0 
GOTO @.e3
.s2#SPIN: ANDi %0 $op1Param #0x7F
POKE &op1Stuff %0 
POKE &spinXOrR #0
EQUi $stereoBit #0 @.f7
POKE &spinXOrR #0xFFF
.f7: POKE &displayLEDs:0 #0
GOTO @.e3
.s2#STEREO_DELAY: PEEK %0 &EIGHT_BIT_EXP_TABLE $op1Param
POKE &delayL %0 
! SUBi <A> #8 #3
SHRi %0 $op1Param <A>
SHLi %0 #0x1 %0
POKE &displayLEDs:0 %0 
.s2: NOOP
.e3: NOOP
.f1: PEEK %0 &EIGHT_BIT_EXP_TABLE $params:OPERAND_1_LOW_PARAM_INDEX
POKE &delayR %0 
! SUBi <A> #8 #3
SHRi %0 $params:OPERAND_1_LOW_PARAM_INDEX <A>
SHLi %0 #0x1 %0
POKE &displayLEDs:1 %0 
MOVi $op2 $params:OPERATOR_2_PARAM_INDEX
SHLi %0 $params:OPERAND_2_HIGH_PARAM_INDEX #8
IORi $shaperBits %0 $params:OPERAND_2_LOW_PARAM_INDEX
PEEK %0 &lastOp2
NEQi %0 $op2 @.t8
PEEK %0 &lastShaperBits 
EQUi %0 $shaperBits @.f9
.t8: POKE &lastOp2 $op2
POKE &lastShaperBits $shaperBits
PEEK %0 &OPERATOR_SHAPERS $op2
POKE &shaper %0 
ANDi $shelf $op2 #1
MOVi $v #0
MOVi $mask #0x10000
MOVi $i #0
GEQi #0 #CURVE_SIZE @.e10
.l11: SHRu $mask $mask #1
POKE &linCurveA $i $v
MOVi $d #0
ANDi %0 $shaperBits $mask
NEQi %0 #0 @.f12
MOVi $d #CURVE_STEP_SIZE
GOTO @.e13 
.f12: NEQi $shelf #0 @.f14
! SUBi <A> #0 #CURVE_STEP_SIZE
MOVi $d <A> 
.f14: NOOP
.e13: POKE &linCurveB $i $d
ADDi $v $v $d
FORi $i #CURVE_SIZE @.l11
.e10: NOOP
! DIVi <A> #CURVE_SIZE #2
PEEK $d &linCurveA:<A> 
MOVi $i #0
GEQi #0 #CURVE_SIZE @.e15
.l16: PEEK %0 &linCurveA $i
SUBi %0 %0 $d
POKE &linCurveA $i %0
ADDi %0 $i #1
PEEK %1 &linCurveA $i
iTOf %1 %1 #1.0
SETL $quadPoints %0 %1
FORi $i #CURVE_SIZE @.l16
.e15: NOOP
! SUBi <A> #CURVE_SIZE #1
! SUBi <B> #CURVE_SIZE #1
PEEK %1 &linCurveA:<A> 
PEEK %0 &linCurveB:<B> 
ADDi %1 %1 %0
iTOf $quadPoints:CURVE_SIZE_PLUS_1 %1 #1.0
! ADDi <B> #CURVE_SIZE #2
MOVf $quadPoints:<B> $quadPoints:CURVE_SIZE_PLUS_1 
PEEK %1 &linCurveA:0
iTOf $quadPoints:0 %1 #1.0
MOVf $quadPoints:1 $quadPoints:0
MOVi $i #0
GEQi #0 #CURVE_SIZE_PLUS_1 @.f9
.l18: GETL $a $quadPoints $i
ADDi %1 $i #1
GETL $b $quadPoints %1
ADDi %1 $i #2
GETL $c $quadPoints %1
ADDf %1 $a $b
MULf %1 #0.5 %1
POKE &quadCurveA $i %1
SUBf %1 $b $a
POKE &quadCurveB $i %1
MULf %1 #2.0 $b
SUBf %1 $a %1
ADDf %1 %1 $c
MULf %1 #0.5 %1
POKE &quadCurveC $i %1
FORi $i #CURVE_SIZE_PLUS_1 @.l18
.f9: RETU


process: FUNC
PARA *1
$localSignal: LOCA *2
$left: LOCi
$right: LOCi
$localClock: LOCi
$xl: LOCi
$xr: LOCi
$il: LOCi
$ir: LOCi
$tmp: LOCi
$pl: LOCf
$pr: LOCf
$peak: LOCi
$dip: LOCi
$spinner: LOCi
$innerLoopIndex: LOCi
$localOp1: LOCi
$localOp1Stuff: LOCi
$localShaper: LOCi
$localDelayL: LOCi
$localDelayR: LOCi
$localBiasL: LOCi
$localBiasR: LOCi
$localSpinXOrR: LOCi
$clockDir: LOCi
MOVi $peak #0
MOVi $dip #0
MOVi $spinner #0
MOVi $localClock #0
.l0: PEEK $localOp1 &op1
PEEK $localOp1Stuff &op1Stuff
PEEK $localShaper &shaper
PEEK $localDelayL &delayL
PEEK $localDelayR &delayR
PEEK $localBiasL &biasL
PEEK $localBiasR &biasR
PEEK $localSpinXOrR &spinXOrR
MOVi $clockDir #1
PEEK %1 &params:SWITCHES_PARAM_INDEX
ANDi %1 %1 #SWITCHES_REVERSE_MASK
EQUi %1 #0 @.f1
MOVi $clockDir #-1
.f1: PEEK %1 &params:SWITCHES_PARAM_INDEX
ANDi %1 %1 #SWITCHES_SYNC_MASK
EQUi %1 #0 @.f2
PEEK $tmp &clock
EQUi $tmp $localClock @.f2
MOVi $localClock $tmp
MULi $spinner $localClock $localOp1Stuff
.f2: SUBi %1 #0 $peak
SHRi %1 %1 #8
ADDi $peak $peak %1
SHRi %1 $dip #8
SUBi $dip $dip %1
! SUBi <B> #10 #3
! SHLi <B> #1 <B>
ADDi %1 $peak <B>
! SUBi <B> #11 #3
SHRu %1 %1 <B>
SHRu %1 #0xFF %1
XORi %1 %1 #0xFF
POKE &displayLEDs:3 %1 
! SUBi <B> #10 #3
SUBi %1 #0 $dip
! SHLi <B> #1 <B>
ADDi %1 %1 <B>
! SUBi <B> #11 #3
SHRu %1 %1 <B>
SHLi %1 #0xFF %1
XORi %1 %1 #0xFF
POKE &displayLEDs:2 %1 
NEQi $localOp1 #SPIN @.f4
SHRu $tmp $spinner #15
ANDi %1 $tmp #0x8
SHRu %1 %1 #3
SUBi %1 #0 %1
XORi %1 $tmp %1
ANDi $il %1 #0x7
ANDi %1 $localSpinXOrR #0x7
XORi $ir $il %1
SHRi %1 #0x80 $il
SHRi %0 #0x80 $ir
IORi %1 %1 %0
POKE &displayLEDs:0 %1 
.f4: MOVi $innerLoopIndex #0
GEQi #0 #64 @.l0
.l6: PEEK $left &signal:0
PEEK $right &signal:1
MOVi $localSignal:0 $left
MOVi $localSignal:1 $right
MOVi %1 $localClock
MOVi %2 #1 
ADRL %3 $localSignal *0
CALL ^write %0 *4
SUBi %1 $localClock $localDelayR
MOVi %2 #1 
ADRL %3 $localSignal *0
CALL ^read %0 *4
MOVi $left $localSignal:0
MOVi $right $localSignal:1
SWCH $localOp1 *5 @.s7
.s7#BIT_CRUSH: IORi %0 $left $localOp1Stuff
SUBi $left %0 $localBiasL
IORi %0 $right $localOp1Stuff
SUBi $right %0 $localBiasR
GOTO @.e8
.s7#SINE_SHAPE: MULi %0 $left $localOp1Stuff
SHRi %0 %0 #2
SUBi %0 %0 $localBiasL
ANDi %0 %0 #0xFFF
PEEK $left &sinTable %0
MULi %0 $right $localOp1Stuff
SHRi %0 %0 #2
ADDi %0 %0 $localBiasL
ANDi %0 %0 #0xFFF
PEEK $right &sinTable %0
GOTO @.e8
.s7#SPIN: SHRu $tmp $spinner #6
ADDi $il $left $tmp
XORi %0 $tmp $localSpinXOrR
ADDi $ir $right %0
ANDi %0 $il #0x1000
SHRu %0 %0 #12
SUBi %0 #0 %0
XORi %0 $il %0
ANDi %0 %0 #0xFFF
SUBi $left %0 #0x800
ANDi %0 $ir #0x1000
SHRu %0 %0 #12
SUBi %0 #0 %0
XORi %0 $ir %0
ANDi %0 %0 #0xFFF
SUBi $right %0 #0x800
ADDi $spinner $spinner $localOp1Stuff
GOTO @.e8
.s7#STEREO_DELAY: SUBi %1 $localClock $localDelayL
MOVi %2 #1 
ADRL %3 $localSignal *0
CALL ^read %0 *4
MOVi $left $localSignal:0
.s7: NOOP
.e8: LEQi $left $peak @.f9
MOVi $peak $left
.f9: GEQi $left $dip @.f10
MOVi $dip $left
.f10: LEQi $right $peak @.f11
MOVi $peak $right
.f11: GEQi $right $dip @.f12
MOVi $dip $right
.f12: SWCH $localShaper *SHAPER_COUNT @.s13
.s13#LINEAR_SHAPER: ADDi $xl $left #0x800
ADDi $xr $right #0x800
SHRi $il $xl #CURVE_SHIFT
SHRi $ir $xr #CURVE_SHIFT
PEEK %0 &linCurveB $il
ANDi %1 $xl #CURVE_FRACTION_MASK
MULi %0 %0 %1
PEEK %1 &linCurveA $il
SHRi %0 %0 #CURVE_SHIFT
ADDi $left %1 %0
PEEK %1 &linCurveB $ir
ANDi %0 $xr #CURVE_FRACTION_MASK
MULi %1 %1 %0
PEEK %0 &linCurveA $ir
SHRi %1 %1 #CURVE_SHIFT
ADDi $right %0 %1
GOTO @.e14
.s13#QUADRATIC_SHAPER: NOOP
! SUBi <B> #CURVE_SHIFT #1
ADDi %0 $left #0x800
! SHLi <B> #1 <B>
ADDi $xl %0 <B>
! SUBi <B> #CURVE_SHIFT #1
ADDi %0 $right #0x800
! SHLi <B> #1 <B>
ADDi $xr %0 <B>
SHRi $il $xl #CURVE_SHIFT
SHRi $ir $xr #CURVE_SHIFT
ANDi %0 $xl #CURVE_FRACTION_MASK
iTOf $pl %0 #STEP_TO_FLOAT_SCALE
ANDi %0 $xr #CURVE_FRACTION_MASK
iTOf $pr %0 #STEP_TO_FLOAT_SCALE
PEEK %0 &quadCurveC $il
PEEK %1 &quadCurveB $il
MULf %0 %0 $pl
ADDf %1 %1 %0
PEEK %0 &quadCurveA $il
MULf %1 %1 $pl
ADDf %0 %0 %1
fTOi $left %0 #1.0
PEEK %0 &quadCurveC $ir
PEEK %1 &quadCurveB $ir
MULf %0 %0 $pr
ADDf %1 %1 %0
PEEK %0 &quadCurveA $ir
MULf %1 %1 $pr
ADDf %0 %0 %1
fTOi $right %0 #1.0
.s13: NOOP
.e14: POKE &signal:0 $left
POKE &signal:1 $right
CALL ^yield %0 *1
ADDi %0 $localClock $clockDir
ANDi $localClock %0 #0xFFFF
FORi $innerLoopIndex #64 @.l6
GOTO @.l0
RETU

.s_BITSCL3482a8e: CNST *54
DATs BIT (S)|--- CLEAR BITS ----| |-------- DELAY -------|
DATi #0
.s_SINSAM3482a8f: CNST *54
DATs SIN (S)|----- AMOUNT ------| |-------- DELAY -------|
DATi #0
.s_ROTSRA3482a90: CNST *54
DATs ROT (S)|------ RATE -------| |-------- DELAY -------|
DATi #0
.s_DLYLEF3482a91: CNST *54
DATs DLY |----- LEFT DELAY -----| |----- RIGHT DELAY ----|
DATi #0
.s_SHARPS3482a92: CNST *24
DATs SHARP SHELF  _
DATi #209 #32 #32
DATs ON = _
DATi #0
.s_SHARPF3482a93: CNST *24
DATs SHARP FOLD
DATi #32 #32 #32 #210 #209 #32 #32
DATs ON =
DATi #32 #210 #0
.s_SMOOTH3482a94: CNST *24
DATs SMOOTH SHELF _
DATi #209 #32 #32
DATs ON = _
DATi #0
.s_SMOOTH3482a95: CNST *24
DATs SMOOTH FOLD
DATi #32 #32 #210 #209 #32 #32
DATs ON =
DATi #32 #210 #0
.s_Divisi3482a96: CNST *17
DATs Division by zero
DATi #0
