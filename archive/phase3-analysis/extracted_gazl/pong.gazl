PRAWN_FIRMWARE_PATCH_FORMAT: ! DEFi #2
FALSE: ! DEFi #0
TRUE: ! DEFi #1
panelTextRows: CNST *8
DATA &.s_18PPVVe919fc54 &.s_116AAOe919fc55
DATA &.s_132NNLe919fc56 &.s_164TAPe919fc57
DATA &.s_1PPVVTe919fc58 &.s_2AAOOIe919fc59
DATA &.s_12NNLLe919fc5a &.s_contTAe919fc5b
GLOB *1
clock: DATi #0
params: GLOB *PARAM_COUNT
displayLEDs: GLOB *4
GLOB *1
instance: DATi #0
CNST *1
clockFreqLimit: DATi #88200
signal: GLOB *2
CNST *1
! SHLi <A> #1 #OPERATOR_1_PARAM_INDEX
! SHLi <B> #1 #OPERAND_1_HIGH_PARAM_INDEX
! IORi <A> <A> <B>
! SHLi <B> #1 #OPERAND_1_LOW_PARAM_INDEX
! IORi <A> <A> <B>
! SHLi <B> #1 #OPERATOR_2_PARAM_INDEX
! IORi <A> <A> <B>
! SHLi <B> #1 #OPERAND_2_HIGH_PARAM_INDEX
! IORi <A> <A> <B>
! SHLi <B> #1 #OPERAND_2_LOW_PARAM_INDEX
! IORi <A> <A> <B>
updateMask: DATi <A>
XOR_SHIFT_RANDOM_TO_FLOAT_FACTOR: ! DEFf #4.6566128730774e-10
GLOB *1
xorShiftRandomSeedX: DATi #123456789
GLOB *1
xorShiftRandomSeedY: DATi #362436069
xorShiftRandom: FUNC
$y: OUTi
$x: LOCi
$t: LOCi
PEEK $x &xorShiftRandomSeedX
PEEK $y &xorShiftRandomSeedY
SHLi %0 $x #10
XORi $t $x %0
MOVi $x $y
SHRu %0 $y #13
XORi %0 $y %0
XORi %0 %0 $t
SHRu %1 $t #10
XORi $y %0 %1
POKE &xorShiftRandomSeedX $x
POKE &xorShiftRandomSeedY $y
RETU
MAX_TAP_COUNT: ! DEFi #16
PAN_LEFT_BIT: ! DEFi #7
PAN_RIGHT_BIT: ! DEFi #6
VOL_DEC_BIT: ! DEFi #5
VOL_INC_BIT: ! DEFi #4
ACCELERATE_BIT: ! DEFi #3
DEACCELERATE_BIT: ! DEFi #2
RANDOM_BIT: ! DEFi #1
RECTIFIER_BIT: ! DEFi #0
VOL_DEC_FACTOR: ! DEFf #0.70710678118655
VOL_INC_FACTOR: ! DEFf #1.414213562373
TIME_DEC_FACTOR: ! DEFf #0.70710678118655
TIME_INC_FACTOR: ! DEFf #1.414213562373
PAN_ATTENUATE: ! DEFf #0.25
BATCH_SIZE: ! DEFi #64
TAP_BITS: ! DEFi #0
TAP_DELAY: ! DEFi #1
TAP_LEFT_GAIN: ! DEFi #2
TAP_RIGHT_GAIN: ! DEFi #3
TAP_STRUCT_SIZE: ! DEFi #4
GLOB *1
tapCount: DATi #0
! MULi <A> #TAP_STRUCT_SIZE #MAX_TAP_COUNT
tapData: GLOB *<A>
init: FUNC
PARA *1
RETU
reset: FUNC
PARA *1
RETU
maxi: FUNC
$y: OUTi
$a: INPi
$b: INPi
MOVi $y $a
LEQi $b $y @.f0
MOVi $y $b
.f0: RETU
calcGainsAndDelays: FUNC
PARA *1
$configBits: INPi
$stepBits: INPi
$initGain: INPf
$initDelay: INPf
$gains: INPp
$delays: INPp
$maxGain: INPp
$maxDelay: INPp
$endGain: INPp
$endDelay: INPp
$g: LOCf
$d: LOCf
$i: LOCi
MOVf $g $initGain
MOVf $d $initDelay
MOVi $i #0
GEQi #0 #8 @.e0
.l1: SHRi %0 #0x80 $i
ANDi %0 $stepBits %0
EQUi %0 #0 @.f2
! SHLi <A> #1 #VOL_INC_BIT
ANDi %0 $configBits <A>
EQUi %0 #0 @.f3
MULf $g $g #VOL_INC_FACTOR
.f3: NOOP
! SHLi <A> #1 #VOL_DEC_BIT
ANDi %0 $configBits <A>
EQUi %0 #0 @.f4
MULf $g $g #VOL_DEC_FACTOR
.f4: NOOP
! SHLi <A> #1 #ACCELERATE_BIT
ANDi %0 $configBits <A>
EQUi %0 #0 @.f5
MULf $d $d #TIME_DEC_FACTOR
.f5: NOOP
! SHLi <A> #1 #DEACCELERATE_BIT
ANDi %0 $configBits <A>
EQUi %0 #0 @.f2
MULf $d $d #TIME_INC_FACTOR
.f2: PEEK %0 $maxGain
LEQf $g %0 @.f7
POKE $maxGain $g
.f7: PEEK %0 $maxDelay
LEQf $d %0 @.f8
POKE $maxDelay $d
.f8: POKE $gains $i $g
POKE $delays $i $d
FORi $i #8 @.l1
.e0: POKE $endGain $g
POKE $endDelay $d
RETU
addTaps: FUNC
$o: OUTf
$op: INPi
$configBits: INPi
$stepBits: INPi
$offset: INPf
$gains: INPp
$delays: INPp
$gainScale: INPf
$delayScale: INPf
$firstStep: INPi
$g: LOCf
$d: LOCf
$i: LOCi
$lg: LOCf
$rg: LOCf
$r: LOCf
$p: LOCp
MOVf $o $offset
PEEK %0 &tapCount
MULi %0 %0 #TAP_STRUCT_SIZE
ADDp $p &tapData %0
MOVi $i #0
GEQi #0 #8 @.e0
.l1: PEEK %0 $gains $i
MULf $g %0 $gainScale
PEEK %0 $delays $i
MULf $d %0 $delayScale
SHRi %0 #0x80 $i
ANDi %0 $stepBits %0
EQUi %0 #0 @.f2
MOVf $lg $g
MOVf $rg $g
! SHLi <A> #1 #PAN_LEFT_BIT
ANDi %0 $configBits <A>
NEQi %0 #0 @.f3
MULf $lg $lg #PAN_ATTENUATE
.f3: NOOP
! SHLi <A> #1 #PAN_RIGHT_BIT
ANDi %0 $configBits <A>
NEQi %0 #0 @.f4
MULf $rg $rg #PAN_ATTENUATE
.f4: MOVf $r #0.0
! SHLi <A> #1 #RANDOM_BIT
ANDi %0 $configBits <A>
EQUi %0 #0 @.f5
CALL &xorShiftRandom %0 *1
! DIVf <A> #1.0 #12.0
! MULf <A> #XOR_SHIFT_RANDOM_TO_FLOAT_FACTOR <A>
iTOf %0 %0 <A>
MULf $r %0 $d
.f5: ADDi %0 $i $firstStep
SHRu %0 #0x80000000 %0
IORi %0 $configBits %0
POKE $p #TAP_BITS %0
ADDf %1 $o $r
fTOi %1 %1 #1.0
SUBi %1 %1 #BATCH_SIZE
MOVi %2 #0
CALL &maxi %0 *3
POKE $p #TAP_DELAY %0
fTOi %0 $lg #1.0
POKE $p #TAP_LEFT_GAIN %0
fTOi %0 $rg #1.0
POKE $p #TAP_RIGHT_GAIN %0
ADDp $p $p #TAP_STRUCT_SIZE
PEEK %0 &tapCount
ADDi %0 %0 #1
POKE &tapCount %0
.f2: ADDf $o $o $d
FORi $i #8 @.l1
.e0: RETU
update: FUNC
PARA *1
$localParams: LOCA *PARAM_COUNT
$i: LOCi
$v: LOCi
$rebuild: LOCi
$stepLength1: LOCf
$stepLength2: LOCf
$offset: LOCf
$gains: LOCA *16
$delays: LOCA *16
$maxGain1: LOCf
$maxDelay1: LOCf
$maxGain2: LOCf
$maxDelay2: LOCf
$endGain: LOCf
$endDelay: LOCf
ADRL %0 $localParams *0
COPY %0 &params *PARAM_COUNT
POKE &tapCount #0
POKE &xorShiftRandomSeedX #123456789
POKE &xorShiftRandomSeedY #362436069
! DIVf <A> #65536.0 #8.0
MOVf $stepLength1 <A>
MOVf $maxGain1 #0.00001
MOVf $maxDelay1 #0.00001
LEQi $localParams:OPERATOR_1_PARAM_INDEX #0 @.f0
ADDi %0 #2 $localParams:OPERATOR_1_PARAM_INDEX
SHRi %0 #65536 %0
iTOf $stepLength1 %0 #1.0
MOVi %1 $localParams:OPERAND_1_LOW_PARAM_INDEX
MOVi %2 $localParams:OPERAND_1_HIGH_PARAM_INDEX
MOVf %3 #1.0
MOVf %4 #1.0
ADRL %5 $gains *0
ADRL %6 $delays *0
ADRL %7 $maxGain1 *0
ADRL %8 $maxDelay1 *0
ADRL %9 $endGain *0
ADRL %10 $endDelay *0
CALL &calcGainsAndDelays %0 *11
.f0: MOVf $stepLength2 $stepLength1
MOVf $offset #0.0
SWCH $localParams:OPERATOR_2_PARAM_INDEX *5 @.s1
.s1#0: GOTO @noSecond
GOTO @.e2
.s1#1: GOTO @.e2
.s1#2: MULf $stepLength2 $stepLength2 #0.5
GOTO @.e2
.s1#3: MULf $offset $stepLength2 #0.5
GOTO @.e2
.s1#4: MOVi %1 $localParams:OPERAND_2_LOW_PARAM_INDEX
MOVi %2 $localParams:OPERAND_2_HIGH_PARAM_INDEX
MOVf %3 $endGain
MOVf %4 $endDelay
ADRL %5 $gains:8 *0
ADRL %6 $delays:8 *0
ADRL %7 $maxGain1 *0
ADRL %8 $maxDelay1 *0
ADRL %9 $endGain *0
ADRL %10 $endDelay *0
CALL &calcGainsAndDelays %0 *11
MOVi %1 $localParams:OPERATOR_1_PARAM_INDEX
MOVi %2 $localParams:OPERAND_1_LOW_PARAM_INDEX
MOVi %3 $localParams:OPERAND_1_HIGH_PARAM_INDEX
MOVf %4 #0.0
ADRL %5 $gains *0
ADRL %6 $delays *0
DIVf %7 #256.0 $maxGain1
DIVf %8 $stepLength1 $maxDelay1
MOVi %9 #0
CALL &addTaps %0 *10
MOVf $offset %0
MOVi %1 $localParams:OPERATOR_2_PARAM_INDEX
MOVi %2 $localParams:OPERAND_2_LOW_PARAM_INDEX
MOVi %3 $localParams:OPERAND_2_HIGH_PARAM_INDEX
MOVf %4 $offset
ADRL %5 $gains:8 *0
ADRL %6 $delays:8 *0
DIVf %7 #256.0 $maxGain1
DIVf %8 $stepLength2 $maxDelay1
MOVi %9 #8
CALL &addTaps %0 *10
GOTO @done
.s1: NOOP
.e2: MOVf $maxGain2 #0.00001
MOVf $maxDelay2 #0.00001
MOVi %1 $localParams:OPERAND_2_LOW_PARAM_INDEX
MOVi %2 $localParams:OPERAND_2_HIGH_PARAM_INDEX
MOVf %3 #1.0
MOVf %4 #1.0
ADRL %5 $gains:8 *0
ADRL %6 $delays:8 *0
ADRL %7 $maxGain2 *0
ADRL %8 $maxDelay2 *0
ADRL %9 $endGain *0
ADRL %10 $endDelay *0
CALL &calcGainsAndDelays %0 *11
MOVi %1 $localParams:OPERATOR_2_PARAM_INDEX
MOVi %2 $localParams:OPERAND_2_LOW_PARAM_INDEX
MOVi %3 $localParams:OPERAND_2_HIGH_PARAM_INDEX
MOVf %4 $offset
ADRL %5 $gains:8 *0
ADRL %6 $delays:8 *0
DIVf %7 #256.0 $maxGain2
DIVf %8 $stepLength2 $maxDelay2
MOVi %9 #8
CALL &addTaps %0 *10
noSecond: LEQi $localParams:OPERATOR_1_PARAM_INDEX #0 @.f3
MOVi %1 $localParams:OPERATOR_1_PARAM_INDEX
MOVi %2 $localParams:OPERAND_1_LOW_PARAM_INDEX
MOVi %3 $localParams:OPERAND_1_HIGH_PARAM_INDEX
MOVf %4 #0.0
ADRL %5 $gains *0
ADRL %6 $delays *0
DIVf %7 #256.0 $maxGain1
DIVf %8 $stepLength1 $maxDelay1
MOVi %9 #0
CALL &addTaps %0 *10
.f3: NOOP
done: RETU
temp: GLOB *2
! MULi <A> #BATCH_SIZE #2
buffer: GLOB *<A>
process: FUNC
PARA *1
! MULi <A> #BATCH_SIZE #2
$tapData: LOCA *TAP_STRUCT_SIZE
$i: LOCi
$clock: LOCi
$l: LOCi
$r: LOCi
$p: LOCp
$bp: LOCp
$bi: LOCi
$tapped: LOCA *<A>
$tp: LOCp
$ledBits: LOCi
$dir: LOCi
.l0: MOVi $ledBits #0
MOVp $bp &buffer
MOVi $dir #2
PEEK %0 &params:SWITCHES_PARAM_INDEX
ANDi %0 %0 #SWITCHES_REVERSE_MASK
EQUi %0 #0 @.f1
! MULi <A> #BATCH_SIZE #2
! SUBi <A> <A> #2
ADDp $bp $bp <A>
MOVi $dir #-2
.f1: MOVi $bi #0
GEQi #0 #BATCH_SIZE @.e2
.l3: COPY &temp &signal *2
COPY &signal $bp *2
COPY $bp &temp *2
ADDp $bp $bp $dir
CALL ^yield %0 *1
FORi $bi #BATCH_SIZE @.l3
.e2: PEEK %0 &clock
SUBi $clock %0 #BATCH_SIZE
MOVi %1 $clock
MOVi %2 #BATCH_SIZE
MOVp %3 &buffer
CALL ^write %0 *4
MOVp $bp &buffer
! MULi <A> #BATCH_SIZE #2
ADDp %0 &buffer <A>
GEQp &buffer %0 @.e4
.l5: POKE $bp #0
FORp $bp %0 @.l5
.e4: MOVp $p &tapData
MOVi $i #0
PEEK %0 &tapCount
GEQi #0 %0 @.e6
.l7: MOVp $bp &buffer
ADRL %1 $tapData *0
COPY %1 $p *TAP_STRUCT_SIZE
SUBi %2 $clock $tapData:TAP_DELAY
MOVi %3 #BATCH_SIZE
ADRL %4 $tapped *0
CALL ^read %1 *4
! SHLi <A> #1 #RECTIFIER_BIT
ANDi %1 $tapData:TAP_BITS <A>
EQUi %1 #0 @.f8
ADRL $tp $tapped *0
MOVi $bi #0
! DIVi <A> #BATCH_SIZE #2
GEQi #0 <A> @.f8
.l10: PEEK %1 $tp
ABSi $l %1
SHRi %1 $l #1
ADDi %1 $l %1
POKE $tp %1
PEEK %1 $tp #1
ABSi $r %1
SHRi %1 $r #1
ADDi %1 $r %1
POKE $tp #1 %1
PEEK %1 $tp #2
ABSi $l %1
SHRi %1 $l #1
ADDi %1 $l %1
POKE $tp #2 %1
PEEK %1 $tp #3
ABSi $r %1
SHRi %1 $r #1
ADDi %1 $r %1
POKE $tp #3 %1
ADDp $tp $tp #4
FORi $bi <A> @.l10
.f8: MOVi $l $tapData:TAP_LEFT_GAIN
MOVi $r $tapData:TAP_RIGHT_GAIN
ADRL $tp $tapped *0
PEEK %1 $tp
ABSi %1 %1
LEQi %1 #12 @.f11
SHRi %1 $tapData:TAP_BITS #16
IORi $ledBits $ledBits %1
.f11: MOVi $bi #0
! DIVi <A> #BATCH_SIZE #2
GEQi #0 <A> @.e12
.l13: PEEK %1 $tp
PEEK %2 $bp
MULi %1 %1 $l
ADDi %2 %2 %1
POKE $bp %2
PEEK %2 $tp #1
PEEK %1 $bp #1
MULi %2 %2 $r
ADDi %1 %1 %2
POKE $bp #1 %1
PEEK %1 $tp #2
PEEK %2 $bp #2
MULi %1 %1 $l
ADDi %2 %2 %1
POKE $bp #2 %2
PEEK %2 $tp #3
PEEK %1 $bp #3
MULi %2 %2 $r
ADDi %1 %1 %2
POKE $bp #3 %1
ADDp $bp $bp #4
ADDp $tp $tp #4
FORi $bi <A> @.l13
.e12: ADDp $p $p #TAP_STRUCT_SIZE
FORi $i %0 @.l7
.e6: MOVp $bp &buffer
! MULi <A> #BATCH_SIZE #2
ADDp %0 &buffer <A>
GEQp &buffer %0 @.e14
.l15: PEEK %1 $bp
SHRi %1 %1 #8
POKE $bp %1
FORp $bp %0 @.l15
.e14: PEEK %0 &params:OPERAND_1_HIGH_PARAM_INDEX
SHRi %1 $ledBits #8
ANDi %0 %0 %1
POKE &displayLEDs:0 %0
PEEK %0 &params:OPERAND_2_HIGH_PARAM_INDEX
ANDi %0 %0 $ledBits
POKE &displayLEDs:2 %0
GOTO @.l0
RETU
.s_18PPVVe919fc54: CNST *55
DATs 1/8                           P  P  V  V  T  T  R  R
DATi #32 #32 #0
.s_116AAOe919fc55: CNST *55
DATs 1/16                          A  A  O  O  I  I  A  E
DATi #32 #32 #0
.s_132NNLe919fc56: CNST *55
DATs 1/32                          N  N  L  L  M  M  N  C
DATi #32 #32 #0
.s_164TAPe919fc57: CNST *55
DATs 1/64 |-------- TAPS --------|
DATi #32 #195 #32 #32 #193 #32 #32 #194 #32 #32 #192 #32 #32 #195 #32 #32 #193 #32 #32
DATs D  T
DATi #32 #32 #0
.s_1PPVVTe919fc58: CNST *55
DATs /1                            P  P  V  V  T  T  R  R
DATi #32 #32 #0
.s_2AAOOIe919fc59: CNST *55
DATs /2                            A  A  O  O  I  I  A  E
DATi #32 #32 #0
.s_12NNLLe919fc5a: CNST *55
DATs +1/2                          N  N  L  L  M  M  N  C
DATi #32 #32 #0
.s_contTAe919fc5b: CNST *55
DATs cont |-------- TAPS --------|
DATi #32 #195 #32 #32 #193 #32 #32 #194 #32 #32 #192 #32 #32 #195 #32 #32 #193 #32 #32
DATs D  T
DATi #32 #32 #0
