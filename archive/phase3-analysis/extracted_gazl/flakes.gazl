PRAWN_FIRMWARE_PATCH_FORMAT: ! DEFi #2
FALSE: ! DEFi #0
TRUE: ! DEFi #1
panelTextRows: CNST *8
DATA &.s_SAMPLE4aa4a1c2 &.s_SQUARE4aa4a1c3
DATA &.s_GRAINE4aa4a1c4 &.s_COMBCC4aa4a1c5
DATA &.s_MIDIMo4aa4a1c6 &.s_Oct24aa4a1c7
DATA &.s_ARPTri4aa4a1c8 &.s_RNDEuc4aa4a1c9
GLOB *1
clock: DATi #0
params: GLOB *PARAM_COUNT
displayLEDs: GLOB *4
CNST *1
clockFreqLimit: DATi #132300
signal: GLOB *2
CNST *1
! SHLi <A> #1 #OPERAND_1_HIGH_PARAM_INDEX
! SHLi <B> #1 #OPERAND_1_LOW_PARAM_INDEX
! IORi <A> <A> <B>
! SHLi <B> #1 #OPERAND_2_HIGH_PARAM_INDEX
! IORi <A> <A> <B>
! SHLi <B> #1 #OPERAND_2_LOW_PARAM_INDEX
! IORi <A> <A> <B>
! SHLi <B> #1 #OPERATOR_2_PARAM_INDEX
! IORi <A> <A> <B>
updateMask: DATi <A>
LOG2: ! DEFf #0.69314718055994530942
error: FUNC
PARA *1
$s: INPp
MOVp %1 $s
CALL ^trace %0 *2
CALL ^abort %0 *1
RETU
exp: FUNC
$y: OUTf
$x: INPf
$a: LOCf
$n: LOCf
$m: LOCf
$t: LOCf
ABSf $m $x
MOVf $a #1.0
MOVf $n #1.0
MOVf $y #1.0
.l0: MOVf $t $y
MULf %0 $a $m
DIVf $a %0 $n
ADDf $y $y $a
ADDf $n $n #1.0
NEQf $y $t @.l0
GEQf $x #0.0 @.f1
DIVf $y #1.0 $y
.f1: RETU
sqrt: FUNC
$y: OUTf
$x: INPf
$t: LOCf
GEQf $x #0.0 @.f0
MOVp %1 &.s_Domain4aa4a1ca
CALL &error %0 *2
.f0: MOVf $y $x
MOVf $t #0.0
.l1: EQUf $y $t @.e2
MOVf $t $y
DIVf %0 $x $y
ADDf %0 $y %0
MULf $y #0.5 %0
GOTO @.l1
.e2: RETU
GLOB *1
rndSeedX: DATi #123456789
GLOB *1
rndSeedY: DATi #362436069
seedRandom: FUNC
PARA *1
$seed: INPi
$x: LOCi
ADDi $x $seed #1
SHLi %0 $x #11
XORi $x $x %0
MULi %0 $x #134775813
SHRu %0 %0 #13
MULi $x $x %0
SHRu %0 $x #17
XORi $x $x %0
POKE &rndSeedX $x
POKE &rndSeedY #362436069
RETU
randomFloat: FUNC
$f: OUTf
$x: LOCi
$y: LOCi
$t: LOCi
PEEK $x &rndSeedX
PEEK $y &rndSeedY
SHLi %0 $x #10
XORi $t $x %0
MOVi $x $y
SHRu %0 $y #13
XORi %0 $y %0
XORi %0 %0 $t
SHRu %1 $t #10
XORi $y %0 %1
ABSi %0 $y
iTOf $f %0 #4.6566128730774e-10
POKE &rndSeedX $x
POKE &rndSeedY $y
RETU
C3_FREQUENCY: ! DEFf #261.6255653005986346778499935233
NOP_MODE: ! DEFi #0
SAMPLE_MODE: ! DEFi #1
SQUARE_MODE: ! DEFi #2
GRAIN_MODE: ! DEFi #3
COMB_MODE: ! DEFi #4
KEY_LOW_MODE: ! DEFi #1
KEY_HIGH_MODE: ! DEFi #2
ARPEG_MODE: ! DEFi #3
RANDOM_MODE: ! DEFi #4
EUCLIDEAN: CNST *16
DATA #0x8000 #0x8080 #0x8420 #0x8888 #0x9248 #0x9494
DATA #0x952a #0xaaaa #0xb56a #0xb5b5 #0xb6db #0xbbbb
DATA #0xbdef #0xbfbf #0xfffe #0xffff
GRAIN_DRIFT: ! DEFi #TRUE
PITCHED_REVERSED: ! DEFi #TRUE
ALSO_SHIFT_NOTES: ! DEFi #FALSE
CROSSFADE_INPUT: ! DEFi #FALSE
CROSSFADE_SAMPLES: ! DEFi #FALSE
SLOW_RELEASE: ! DEFi #0x40
FAST_RELEASE: ! DEFi #0x800
STANDARD_ATTACK: ! DEFi #0x2000
COMB_ATTACK: ! DEFi #0xA000
NOTE_RATES: GLOB *64
SQRT_TABLE: GLOB *4097
GLOB *1
doReset: DATi #TRUE
GLOB *1
updateBits: DATi #TRUE
init: FUNC
PARA *1
$i: LOCi
MOVp %1 &.s_init4aa4a1cb
CALL ^trace %0 *2
EQUi #CROSSFADE_SAMPLES #FALSE @.f0
MOVi $i #0
GEQi #0 #4097 @.f0
.l2: NOOP
! DIVf <A> #1.0 #4096.0
iTOf %1 $i <A>
CALL &sqrt %0 *2
fTOi %0 %0 #65536.0
POKE &SQRT_TABLE $i %0
FORi $i #4097 @.l2
.f0: MOVi $i #0
GEQi #0 #64 @.e3
.l4: SUBi %1 $i #36
! DIVf <A> #LOG2 #12.0
iTOf %1 %1 <A>
CALL &exp %0 *2
POKE &NOTE_RATES $i %0
FORi $i #64 @.l4
.e3: RETU
reset: FUNC
PARA *1
MOVp %1 &.s_reset4aa4a1cc
CALL ^trace %0 *2
POKE &doReset #TRUE
RETU
update: FUNC
PARA *1
MOVp %1 &.s_update4aa4a1cd
CALL ^trace %0 *2
POKE &updateBits #TRUE
RETU
process: FUNC
PARA *1
$i: LOCi
$j: LOCi
$l: LOCi
$e: LOCi
$m: LOCi
$x: LOCi
$y: LOCi
$f: LOCf
$trig: LOCi
$key: LOCi
$rate: LOCf
$oscModeOp: LOCi
$left: LOCi
$right: LOCi
$inL: LOCi
$inR: LOCi
$aL: LOCi
$aR: LOCi
$bL: LOCi
$bR: LOCi
$clock: LOCi
$bSamples: LOCA *4
$aSamples: LOCA *4
$step: LOCi
$nextStep: LOCi
$subStep: LOCi
$xpose: LOCi
$noteBits: LOCi
$euclideanBits: LOCi
$semisList: LOCA *12
$semisCount: LOCi
$octsList: LOCA *4
$octsCount: LOCi
$op1LowBits: LOCi
$op1HighBits: LOCi
$shift: LOCi
$noteIndex: LOCi
$octaveIndex: LOCi
$noteIndexFloat: LOCf
$octaveIndexFloat: LOCf
$fbL: LOCi
$fbR: LOCi
$noteModeOp: LOCi
$midiMode: LOCi
$lastMidiNote: LOCi
$midiNote: LOCi
$stepTrigs: LOCA *16
$stepTies: LOCA *16
$stepSemis: LOCA *16
$stepOcts: LOCA *16
$env: LOCi
$gk: LOCi
$g0: LOCi
$g1: LOCi
$period: LOCi
$pos: LOCi
$phase: LOCi
$phaseInc: LOCi
$inPos: LOCi
$outPos: LOCi
$pitchedRate: LOCi
$fbDL: LOCi
$fbDR: LOCi
.l0: PEEK %0 &doReset
EQUi %0 #FALSE @.f1
POKE &doReset #FALSE
MOVi $noteModeOp #0
MOVi $midiMode #FALSE
MOVi $lastMidiNote #-1
MOVi $midiNote #-1
MOVi $env #0
MOVi $gk #0
MOVi $g0 #0
MOVi $g1 #0
MOVi $pos #0
MOVi $inPos #0
MOVi $outPos #0
MOVi $pitchedRate #0
MOVi $phase #0
MOVi $phaseInc #0
MOVi $fbDL #0
MOVi $fbDR #0
MOVi $i #0
GEQi #0 #16 @.e2
.l3: SETL $stepTrigs $i #FALSE
SETL $stepTies $i #FALSE
SETL $stepSemis $i #0
SETL $stepOcts $i #0
FORi $i #16 @.l3
.e2: POKE &updateBits #TRUE
.f1: PEEK $clock &clock
SHRi $step $clock #12
ADDi %0 $step #1
ANDi $nextStep %0 #15
PEEK %0 &params:SWITCHES_PARAM_INDEX
ANDi %0 %0 #SWITCHES_REVERSE_MASK
EQUi %0 #0 @.f4
XORi $clock $clock #0xFFFF
SUBi %0 $step #1
ANDi $nextStep %0 #15
.f4: ANDi $subStep $clock #0xFFF
PEEK $oscModeOp &params:OPERATOR_1_PARAM_INDEX
PEEK %0 &updateBits
EQUi %0 #FALSE @.f5
MOVp %1 &.s_bitsup4aa4a1ce
CALL ^trace %0 *2
POKE &updateBits #FALSE
MOVi $i #0
GEQi #0 #16 @.e6
.l7: SETL $stepTrigs $i #FALSE
SETL $stepTies $i #FALSE
SETL $stepSemis $i #0
SETL $stepOcts $i #0
FORi $i #16 @.l7
.e6: POKE &displayLEDs:2 #0
POKE &displayLEDs:3 #0
PEEK $noteModeOp &params:OPERATOR_2_PARAM_INDEX
SWCH $noteModeOp *5 @.s8
.s8#KEY_HIGH_MODE: NOOP
.s8#KEY_LOW_MODE: MOVi $midiMode #TRUE
PEEK %0 &params:OPERAND_1_HIGH_PARAM_INDEX
PEEK %1 &params:OPERAND_1_LOW_PARAM_INDEX
SHLi %0 %0 #8
PEEK %2 &params:OPERAND_2_LOW_PARAM_INDEX
IORi %1 %1 %0
SHLi %2 %2 #16
PEEK %0 &params:OPERAND_2_HIGH_PARAM_INDEX
IORi %1 %1 %2
SHLi %0 %0 #24
IORi $m %1 %0
MOVi $midiNote #8
MOVi $midiNote #8
GEQi #8 #40 @.e10
.l11: GEQi $m #0 @.f12
NEQi $noteModeOp #KEY_HIGH_MODE @.e9
ADDi $midiNote $midiNote #24
GOTO @.e9
.f12: SHLi $m $m #1
FORi $midiNote #40 @.l11
.e10: MOVi $midiNote #-1
foundNote: GOTO @.e9
.s8#RANDOM_MODE: NOOP
.s8#ARPEG_MODE: MOVi $midiMode #FALSE
MOVi $lastMidiNote #-1
MOVi $midiNote #-1
MOVi $semisCount #0
MOVi $octsCount #0
PEEK %1 &params:OPERAND_1_HIGH_PARAM_INDEX
SHLi %1 %1 #8
PEEK %0 &params:OPERAND_1_LOW_PARAM_INDEX
IORi $noteBits %1 %0
MOVi $i #0
GEQi #0 #12 @.e14
.l15: SHLi %1 $noteBits $i
ANDi %1 %1 #0x8000
EQUi %1 #0 @.f16
SETL $semisList $semisCount $i
ADDi $semisCount $semisCount #1
.f16: FORi $i #12 @.l15
.e14: MOVi $i #0
GEQi #0 #4 @.e17
.l18: SHLi %1 $noteBits $i
ANDi %1 %1 #8
EQUi %1 #0 @.f19
SETL $octsList $octsCount $i
ADDi $octsCount $octsCount #1
.f19: FORi $i #4 @.l18
.e17: PEEK $op1LowBits &params:OPERAND_2_LOW_PARAM_INDEX
PEEK $op1HighBits &params:OPERAND_2_HIGH_PARAM_INDEX
LEQi $semisCount #0 @.f5
LEQi $octsCount #0 @.f5
ANDi $xpose $op1LowBits #0xF
NEQi $noteModeOp #RANDOM_MODE @.f22
ANDi $shift $op1HighBits #0xF
MOVi $i #0
GEQi #0 #16 @.e23
.l24: ADDi %1 $i $shift
ANDi $j %1 #0xF
ANDi %1 $op1HighBits #0xF0
SHRi %1 %1 #4
PEEK %1 &EUCLIDEAN %1
SHLi %1 %1 $i
ANDi %1 %1 #0x8000
EQUi %1 #0 @.f25
SETL $stepTrigs $j #TRUE
.f25: FORi $i #16 @.l24
.e23: MOVi $euclideanBits #0
ANDi %1 $op1LowBits #0xF0
ADDi %1 %1 #192837463
CALL &seedRandom %0 *2
MOVf $noteIndexFloat #0.0
MOVf $octaveIndexFloat #0.0
MOVi $i #0
GEQi #0 #16 @.e26
.l27: EQUi #ALSO_SHIFT_NOTES #0 @.f28
ADDi %0 $i $shift
ANDi $j %0 #0xF
GOTO @.e29
.f28: MOVi $j $i
.e29: GETL %0 $stepTrigs $j
EQUi %0 #FALSE @.f31
LEQi $semisCount #0 @.f31
LEQi $octsCount #0 @.f31
FLOf %0 $noteIndexFloat
SUBf %0 $noteIndexFloat %0
iTOf %1 $semisCount #1.0
MULf %0 %0 %1
fTOi %0 %0 #1.0
GETL %0 $semisList %0
SETL $stepSemis $j %0
FLOf %0 $octaveIndexFloat
SUBf %0 $octaveIndexFloat %0
iTOf %1 $octsCount #1.0
MULf %0 %0 %1
fTOi %0 %0 #1.0
GETL %0 $octsList %0
SETL $stepOcts $j %0
CALL &randomFloat %0 *1
MULf %0 %0 #2.0
SUBf %0 %0 #1.0
ADDf $noteIndexFloat $noteIndexFloat %0
CALL &randomFloat %0 *1
MULf %0 %0 #2.0
SUBf %0 %0 #1.0
ADDf $octaveIndexFloat $octaveIndexFloat %0
SHRi %0 #0x8000 $j
IORi $euclideanBits $euclideanBits %0
.f31: FORi $i #16 @.l27
.e26: ADDi %1 $op1HighBits #6734261
CALL &seedRandom %0 *2
MOVi $l #0
MOVi $i #0
GEQi #0 #17 @.e38
.l33: EQUi $i #16 @.t34
GETL %0 $stepTrigs $i
EQUi %0 #FALSE @.f35
.t34: CALL &randomFloat %0 *1
SUBi %1 $i $l
iTOf %1 %1 #1.0
MULf %0 %0 %1
ADDf %0 %0 #0.5
fTOi %0 %0 #1.0
ADDi $e $l %0
MOVi $j $l
GEQi $l $e @.e36
.l37: SETL $stepTies $j #TRUE
FORi $j $e @.l37
.e36: MOVi $l $i
.f35: FORi $i #17 @.l33
GOTO @.e38
.f22: MOVi $i #0
GEQi #0 #16 @.e39
.l40: ANDi %0 $i #7
SHLi %0 $op1HighBits %0
ANDi %0 %0 #0x80
EQUi %0 #0 @.f41
SETL $stepTrigs $i #TRUE
.f41: FORi $i #16 @.l40
.e39: ANDi %0 $op1LowBits #0x80
EQUi %0 #0 @.f42
SUBi $noteIndex $semisCount #1
SUBi $octaveIndex $octsCount #1
GOTO @.e43
.f42: MOVi $noteIndex #0
MOVi $octaveIndex #0
.e43: MOVi $i #0
GEQi #0 #16 @.e44
.l45: GETL %0 $stepTrigs $i
EQUi %0 #FALSE @.f47
LEQi $semisCount #0 @.f47
LEQi $octsCount #0 @.f47
GETL %0 $semisList $noteIndex
SETL $stepSemis $i %0
GETL %0 $octsList $octaveIndex
SETL $stepOcts $i %0
ANDi %0 $i #15
SHRi %0 %0 #2
SHRi %0 #0x80 %0
ANDi %0 $op1LowBits %0
EQUi %0 #0 @.f48
SUBi $noteIndex $noteIndex #1
GEQi $noteIndex #0 @.e51
SUBi $noteIndex $semisCount #1
SUBi $octaveIndex $octaveIndex #1
GEQi $octaveIndex #0 @.e51
SUBi $octaveIndex $octsCount #1
GOTO @.e51
.f48: ADDi $noteIndex $noteIndex #1
LSSi $noteIndex $semisCount @.f47
MOVi $noteIndex #0
ADDi $octaveIndex $octaveIndex #1
LSSi $octaveIndex $octsCount @.f47
MOVi $octaveIndex #0
.e51: NOOP
.f47: FORi $i #16 @.l45
.e44: MOVi $i #0
GEQi #0 #16 @.f5
.l55: ADDi %0 $i #1
ANDi %0 %0 #15
GETL %0 $stepTrigs %0
XORi %0 %0 #TRUE
SETL $stepTies $i %0
FORi $i #16 @.l55
.e38: NOOP
.s8: NOOP
.e9: NOOP
.f5: MOVi $trig #FALSE
NEQi $midiMode #FALSE @.f56
NEQi $subStep #0 @.f57
GETL %0 $stepTrigs $step
EQUi %0 #FALSE @.f58
GETL %0 $stepOcts $step
MULi %0 %0 #12
ADDi %0 $xpose %0
GETL %1 $stepSemis $step
ADDi $key %0 %1
GETL %0 $stepSemis $step
SHRi %0 #0x80 %0
POKE &displayLEDs:0 %0
GETL %0 $stepSemis $step
GETL %1 $stepOcts $step
SHRi %0 #0x8000 %0
SHRi %1 #8 %1
IORi %0 %0 %1
POKE &displayLEDs:1 %0
MOVi $trig #TRUE
.f58: NEQi $noteModeOp #ARPEG_MODE @.f59
ANDi %0 $step #7
SHRi %0 #0x80 %0
POKE &displayLEDs:2 %0
SHRi %0 $step #2
SHRi %0 #0x80 %0
POKE &displayLEDs:3 %0
GOTO @.e60
.f59: SHRi %0 #0x8000 $step
XORi %0 %0 #-1
ANDi $i $euclideanBits %0
SHRi %0 $i #8
POKE &displayLEDs:2 %0
ANDi %0 $i #0xFF
POKE &displayLEDs:3 %0
.e60: NOOP
.f57: NEQi $subStep #0x200 @.f62
GETL %0 $stepTies $step
NEQi %0 #FALSE @.f62
MOVi $env #0
MOVi $gk #SLOW_RELEASE
.f62: NEQi $subStep #0xE00 @.e65
GETL %0 $stepTrigs $nextStep
EQUi %0 #FALSE @.e65
MOVi $env #0
MOVi $gk #FAST_RELEASE
GOTO @.e65
.f56: EQUi $midiNote $lastMidiNote @.f66
LSSi $midiNote #0 @.f67
MOVi $key $midiNote
POKE &displayLEDs:0 #0
POKE &displayLEDs:1 #0
MOVi $trig #TRUE
GOTO @.e68
.f67: MOVi $env #0
MOVi $gk #SLOW_RELEASE
.e68: NOOP
.f66: MOVi $lastMidiNote $midiNote
.e65: EQUi $trig #FALSE @.f69
PEEK $rate &NOTE_RATES $key
PEEK %0 &params:CLOCK_FREQ_PARAM_INDEX
! MULf <A> #65536.0 #C3_FREQUENCY
iTOf %0 %0 #1.0
DIVf %0 <A> %0
MULf $f %0 $rate
ADDf %0 $f #0.5
FLOf %0 %0
fTOi $phaseInc %0 #1.0
DIVf %0 #4294967296.0 $f
ADDf %0 %0 #0.5
FLOf %0 %0
fTOi $period %0 #1.0
MOVi $pos #0
MOVi $phase #0
SHLi $pos $clock #16
MOVi $env #0x1000
MOVi $gk #STANDARD_ATTACK
SWCH $oscModeOp *5 @.s70
.s70#GRAIN_MODE: MOVi $inPos $clock
MOVi $phase #0x10000
EQUi #GRAIN_DRIFT #FALSE @.e71
SHRi %0 $phaseInc #4
SUBi $phaseInc $phaseInc %0
GOTO @.e71
.s70#SAMPLE_MODE: NOOP
! EQUi #DEBUG #0 @.a73
GRTi #0 $key @.f74
LSSi $key #64 @.a73
.f74: MOVp %1 &.a_0keyke4aa4a1c2
CALL ^assertFail %0 *1
.a73: fTOi $pitchedRate $rate #131072.0
LEQi $pitchedRate #0x10000 @.e71
EQUi #PITCHED_REVERSED #FALSE @.f76
SUBi $pitchedRate #0 $pitchedRate
GOTO @.e71
.f76: ADDi $pos $pos #0x10000
.e77: GOTO @.e71
.s70#COMB_MODE: MOVi $gk #COMB_ATTACK
.s70: NOOP
.e71: NOOP
.f69: MOVi %1 $clock
MOVi %2 #1
MOVp %3 &signal
CALL ^write %0 *4
MOVi %1 $clock
MOVi %2 #1
MOVp %3 &signal
CALL ^read %0 *4
PEEK $inL &signal:0
PEEK $inR &signal:1
SUBi %0 $env $g0
MULi %0 %0 $gk
SHRi %0 %0 #16
ADDi $g0 $g0 %0
SUBi %0 $g0 $g1
MULi %0 %0 $gk
SHRi %0 %0 #16
ADDi $g1 $g1 %0
SWCH $oscModeOp *5 @.s78
.s78#NOP_MODE: MOVi $left $inL
MOVi $right $inR
GOTO @.e79
.s78#SQUARE_MODE: MOVi $left #0x200
GEQi $phase #0x4000 @.f80
MOVi $left #-0x200
.f80: MOVi $right $left
ADDi %0 $phase $phaseInc
ANDi $phase %0 #0xFFFF
GOTO @.e79
.s78#GRAIN_MODE: LSSi $phase #0x10000 @.f81
SUBi $pos $pos $period
SUBi $phase $phase #0x10000
MOVi $outPos $inPos
SHRi $inPos $pos #16
.f81: MOVi %1 $inPos
MOVi %2 #1
ADRL %3 $bSamples *0
CALL ^read %0 *4
ADDi $inPos $inPos #1
MOVi %1 $outPos
MOVi %2 #1
ADRL %3 $aSamples *0
CALL ^read %0 *4
ADDi $outPos $outPos #1
SUBi %0 $bSamples:0 $aSamples:0
MULi %0 %0 $phase
SHRi %0 %0 #16
ADDi $left $aSamples:0 %0
SUBi %0 $bSamples:1 $aSamples:1
MULi %0 %0 $phase
SHRi %0 %0 #16
ADDi $right $aSamples:1 %0
ADDi $pos $pos #0x10000
ADDi $phase $phase $phaseInc
GOTO @.e79
.s78#SAMPLE_MODE: SHRi $i $pos #16
MOVi %1 $i
MOVi %2 #2
ADRL %3 $aSamples *0
CALL ^read %0 *4
ANDi $x $pos #0xFFFF
ADDi $pos $pos $pitchedRate
SUBi %0 $aSamples:2 $aSamples:0
MULi %0 %0 $x
SHRi %0 %0 #16
ADDi $left $aSamples:0 %0
SUBi %0 $aSamples:3 $aSamples:1
MULi %0 %0 $x
SHRi %0 %0 #16
ADDi $right $aSamples:1 %0
EQUi #CROSSFADE_SAMPLES #FALSE @.e79
SUBi %1 $i #0x8000
MOVi %2 #2
ADRL %3 $bSamples *0
CALL ^read %0 *4
SUBi %0 $bSamples:2 $bSamples:0
MULi %0 %0 $x
SHRi %0 %0 #16
ADDi $bL $bSamples:0 %0
SUBi %0 $bSamples:3 $bSamples:1
MULi %0 %0 $x
SHRi %0 %0 #16
ADDi $bR $bSamples:1 %0
SUBi %0 $clock $i
ANDi $x %0 #0xFFFF
LSSi $x #0x8000 @.f83
SUBi $x #0x10000 $x
.f83: SHRi $x $x #3
SUBi %0 #4096 $x
PEEK $y &SQRT_TABLE %0
PEEK $x &SQRT_TABLE $x
MULi %0 $bL $y
MULi %1 $left $x
ADDi %0 %0 %1
SHRi $left %0 #16
MULi %0 $bR $y
MULi %1 $right $x
ADDi %0 %0 %1
SHRi $right %0 #16
GOTO @.e79
.s78#COMB_MODE: SUBi %1 $clock #1
SHRi %2 $period #16
SUBi %1 %1 %2
MOVi %2 #2
ADRL %3 $aSamples *0
CALL ^read %0 *4
ANDi $x $period #0xFFFF
SUBi %0 $aSamples:0 $aSamples:2
MULi %0 %0 $x
SHRi %0 %0 #16
ADDi $fbL $aSamples:2 %0
SUBi %0 $aSamples:1 $aSamples:3
MULi %0 %0 $x
SHRi %0 %0 #16
ADDi $fbR $aSamples:3 %0
SUBi %0 $fbL $fbDL
SHRi %0 %0 #8
ADDi $fbDL $fbDL %0
SUBi %0 $fbR $fbDR
SHRi %0 %0 #8
ADDi $fbDR $fbDR %0
SUBi $fbL $fbL $fbDL
SUBi $fbR $fbR $fbDR
GEQi $phase #0x10000 @.f84
ADDi $fbL $fbL $inL
ADDi $fbR $fbR $inR
ADDi $phase $phase $phaseInc
.f84: MOVi $left $fbL
MOVi $right $fbR
MULi %0 $left $g1
SHRi $bSamples:0 %0 #12
MULi %0 $right $g1
SHRi $bSamples:1 %0 #12
MOVi %1 $clock
MOVi %2 #1
ADRL %3 $bSamples *0
CALL ^write %0 *4
.s78: NOOP
.e79: EQUi #CROSSFADE_INPUT #FALSE @.f85
SUBi %0 $left $inL
MULi %0 %0 $g1
SHRi %0 %0 #12
ADDi $left $inL %0
SUBi %0 $right $inR
MULi %0 %0 $g1
SHRi %0 %0 #12
ADDi $right $inR %0
GOTO @.e86
.f85: MULi %0 $left $g1
SHRi $left %0 #12
MULi %0 $right $g1
SHRi $right %0 #12
.e86: POKE &signal:0 $left
POKE &signal:1 $right
CALL ^yield %0 *1
GOTO @.l0
RETU
.s_SAMPLE4aa4a1c2: CNST *7
DATs SAMPLE
DATi #0
.s_SQUARE4aa4a1c3: CNST *7
DATs SQUARE
DATi #0
.s_GRAINE4aa4a1c4: CNST *54
DATs GRAIN
DATi #198
DATs ---------Enabled Semitones--------
DATi #199 #198
DATs -Octaves--
DATi #199 #0
.s_COMBCC4aa4a1c5: CNST *54
DATs COMB
DATi #32 #197
DATs C C# D  D# E  F  F# G   G# A  A# B
DATi #197 #197
DATs 0  1  2  3
DATi #197 #0
.s_MIDIMo4aa4a1c6: CNST *54
DATs MIDI Mode (set MIDI CONTROL switch to BITS)
DATi #32 #32 #32 #32 #32 #32 #32 #32 #32 #32 #0
.s_Oct24aa4a1c7: CNST *54
DATs Oct+2
DATi #32 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #213 #0
.s_ARPTri4aa4a1c8: CNST *54
DATs ARP   Triggers
DATi #32 #32 #212 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #211 #215 #32
DATs Direction
DATi #32 #197 #32
DATs Transpose
DATi #32 #197 #0
.s_RNDEuc4aa4a1c9: CNST *54
DATs RND   Euclidean
DATi #32 #197
DATs Shift
DATi #32 #32 #32 #32 #32 #32 #197 #32
DATs Rnd Order
DATi #32 #197 #32
DATs Transpose
DATi #32 #197 #0
.s_Domain4aa4a1ca: CNST *13
DATs Domain error
DATi #0
.s_init4aa4a1cb: CNST *5
DATs init
DATi #0
.s_reset4aa4a1cc: CNST *6
DATs reset
DATi #0
.s_update4aa4a1cd: CNST *7
DATs update
DATi #0
.s_bitsup4aa4a1ce: CNST *12
DATs bits update
DATi #0
! EQUi #DEBUG #0 @.noAssertStrings
.a_0keyke4aa4a1c2: CNST *23
DATs (0 <= key && key < 64)
DATi #0
.noAssertStrings: !
